<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" width="482" height="468"  applicationComplete="init()" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->	
	</fx:Declarations>	
	
	<fx:Script>
		<![CDATA[
			import com.childoftv.xlsxreader.Worksheet;
			import com.childoftv.xlsxreader.XLSXLoader;
			
			import mx.controls.Alert;		
			
			private var aLangList:Array=[]; //语言列表
			
			private var _xlsxLoader:XLSXLoader;
			
			private function init():void
			{
				var m:String=getValue("excelM");
				excel_txt.text =(m ? m :  "选择Excel文件") ;
				
				var p:String=getValue("excelP");
				xml_txt.text =(p ? p : "默认和Excel同一路径") ;
				
				excel_txt.addEventListener(Event.CHANGE,textHandler);
				xml_txt.addEventListener(Event.CHANGE,textHandler);
			}
			
			private function textHandler(e:Event):void
			{
				storeDataLSO(excel_txt.text,xml_txt.text);
			}
			
			private function onCreate(path:String):void 
			{
				var file:File = new File(path);
				var url:String = file.url;
				// Load the embedded spreadsheet and get the first sheet
				_xlsxLoader ||= new XLSXLoader();
				//Listen for when the file is loaded
				_xlsxLoader.addEventListener(Event.COMPLETE,urlloaderCompHandler);
				_xlsxLoader.addEventListener(IOErrorEvent.IO_ERROR, urlloaderErrHandler);
				//Load the file
				_xlsxLoader.load(url);
				addTipsValue("start loader "+url);
				function urlloaderCompHandler(e:Event):void 
				{
					addTipsValue("finish loader");
					addTipsValue("parse data");
					createOneXML();				
				} 
				
				function urlloaderErrHandler(e:IOErrorEvent):void
				{
					Alert.show(e.text,"文件错误");
				}
			}
			
			/**
			 * 创建XML
			 */	
			private function createOneXML():void
			{
				aLangList=[];
				var sheet_names:Vector.<String> = _xlsxLoader.getSheetNames();
				var count:int= sheet_names.length;
				var tData:Array=[];
				for each(var name:String in sheet_names)
				{
					var sheet:Worksheet = _xlsxLoader.worksheet(name);
					if(!sheet) 
						continue;		
					tData.push({"name":name,"value":createXML(sheet)});
				}
				
				addTipsValue("parse data finish");
				
				count=aLangList.length;		
				if(count<=0)
				{
					Alert.show("没有任何语言版本，缺少lang.","错误");
					return;
				}
				
				for(var i:int=0;i<count;i+=1)
				{			
					var sXML:String=getXMLData(aLangList[i]);				
					createFile(sXML,(aLangList[i]=="ALL" ? null : aLangList[i]));				
				}
				
				addTipsValue("create xml data complete");			
				
				function getXMLData(lang:String):String
				{
					var sxml:String="";
					var count:int=tData.length;			
					for(var i:int=0;i<count;i+=1)
					{
						if(!tData[i].value[lang]) continue;
						sxml+="   <"+tData[i].name+">";
						sxml+= "\n"+tData[i].value[lang]+"\n";
						sxml+="   </"+tData[i].name+">\n";			
					}
					return sxml;
				}			
			}	
				
			private function createXML(sheet:Worksheet):Object
			{
				var filterList:Array=["isRow","lang"];	//过滤列表
				var isRow:Boolean = !findNodeIsRow("isRow", sheet);
				var isHaveLang:Boolean = (findNodeIsRow("lang", sheet) || findNodeIsRow("lang",sheet,false));	//是否有语言
				
				var isCol:Boolean = findNodeIsRow("key", sheet);
				var isKey:Boolean = (isCol || findNodeIsRow("key",sheet,false));	//是否有key
				
				var dObject:Object;
				
				if(isKey)
				{
					dObject = parseExcelToXML(sheet,isCol);
				}else 
				{
					var row:int=(!isRow ? sheet.rows : sheet.cols);			
					var col:int=(isRow ? sheet.rows : sheet.cols);
					
					if(row>col) col=row;  //待定
					
					var tArr:Array;
					dObject = new Object();
					if(!isHaveLang) col=1;
					for(var i:int=1;i<=col;i+=1)
					{	
						if(isHaveLang && !isHaveLangValue(sheet,isRow,row,i+1)) 
							continue; //没有语言
						tArr = createNodeXML(sheet, isRow, col, isHaveLang, filterList, i + 1);
						dObject[tArr[0]] = tArr[1];				
						if (tArr[0] && aLangList.indexOf(tArr[0]) == -1) aLangList.push(tArr[0]); //汇总语言
					}
				}
				//trace(sxml);
				return dObject;
			}
			
			private function parseExcelToXML(sheet:Worksheet,isCol:Boolean):Object
			{
				var dObject:Object=new Object();
				
				var row:int = (isCol ? sheet.rows : sheet.cols);		
				var col:int = (isCol ? sheet.cols : sheet.rows);
				
				var lang:String;
				for (var i:int = 1; i <= col; i += 1)				
				{	
					lang = (isCol ? sheet.getCellExtend(1, i) : sheet.getCellExtend(i, 1));	
					
					if (lang == "all") lang = "ALL";
					
					if (lang.indexOf("_") == -1 && lang != "ALL") continue;
					
					if (aLangList.indexOf(lang) == -1) aLangList.push(lang); //汇总语言 
					dObject[lang] = createXML(i);
				}
				
				function createXML(index:int):String
				{
					var id:String, iValue:String;
					var sxml:String = "";
					var nodeStr:String;
					var reg:RegExp = /(^\s+)|(\s+$)|\s/g;	
					
					for (var i:int = 1; i < row; i += 1)					
					{
						nodeStr = "     <info ";	
						for (var j:int = 1; j <= col; j += 1)
						{		
							id = (isCol ? sheet.getCellExtend(1, j, false) : sheet.getCellExtend(j, 1, false));
							if (id) id = id.replace(reg, "");
							
							iValue = (isCol ? sheet.getCellExtend(i, j) : sheet.getCellExtend(j, i));
							if (id == "key")
							{
								iValue = (isCol ? sheet.getCellExtend(i, index) : sheet.getCellExtend(index, i));
								id = (isCol ? sheet.getCellExtend(i, j) : sheet.getCellExtend(j, i));
								if (!id)
								{
									nodeStr = null;
									break;
								} 
							}
							
							if(!id || regNum(id) || id.indexOf("_") != -1) continue;
							
							if (nodeStr != "     <info ") nodeStr += "           ";
							nodeStr += id + "=\"" + iValue + "\"\n";
						}
						
						if (nodeStr)
						{
							if(nodeStr.indexOf("\n")) nodeStr=nodeStr.substring(0,nodeStr.lastIndexOf("\n"));						
							nodeStr+="/>\n";	
							sxml += nodeStr;
						}
					}
					
					return sxml;
				}
				
				return dObject;
			}
			
		
			/**
			 * 检查语言
			 */
			private function isHaveLangValue(sheet:Worksheet,isRow:Boolean,row:int,index:int):Boolean
			{
				var lang:String,id:String;
				for(var i:int=1;i<=row;i+=1)
				{	
					id=(isRow ? sheet.getCellExtend(1, i) : sheet.getCellExtend(i, 1));	
					if(id=="lang")
					{
						if(isRow)
							lang=sheet.getCellExtend(index, i,false);			
						else 
							lang= sheet.getCellExtend(i, index,false);		
						break;
					} 
				}			
				return (lang !=null && lang!="");
			}
		
			/**
			 * 创建XML
			 */
			private function createNodeXML(sheet:Worksheet,isRow:Boolean,row:int,isHaveLang:Boolean,filterList:Array,index:int):Array
			{
					var id:String,oNode:Object,lang:String;
					var sxml:String="";
					var nodeStr:String;
					var reg:RegExp = /(^\s+)|(\s+$)|\s/g;	
					oNode=new Object();
					nodeStr="     <info ";
					for(var j:int=1;j<=row;j+=1)
					{			
						id=(isRow ? sheet.getCellExtend(1, j, false) : sheet.getCellExtend(j, 1, false));	
						if(id) id=id.replace(reg,"");
						if(id=="lang") lang=(isRow ? sheet.getCellExtend(index, j, false) : sheet.getCellExtend(j, index, false)); //获取语言
						if(!id || oNode[id] || regNum(id) || filterList.indexOf(id)!=-1) continue;
						oNode[id]=1;
						if(nodeStr!="     <info ") nodeStr+="           ";
						if(isRow)
							nodeStr +=id+"=\"" + sheet.getCellExtend(index, j) + "\"";			
						else 
							nodeStr +=id+"=\"" + sheet.getCellExtend(j, index) + "\"";	
						
						nodeStr+="\n";
					}
					if(nodeStr.indexOf("\n")) nodeStr=nodeStr.substring(0,nodeStr.lastIndexOf("\n"));
					nodeStr+="/>";	
					sxml+=nodeStr;
					if(!isHaveLang) lang="ALL";
					return [lang,sxml];
			}
			
			/**
			 * 查找是否按行生成数据
			 */	
			private function findNodeIsRow(sname:String,sheet:Worksheet,isRow:Boolean=true):Boolean
			{
				var isFind:Boolean;			
				var id:String;      
				var count:int=(isRow ? sheet.cols: sheet.rows);
				for(var j:int=1;j<=count;j+=1)
				{			
					if(isRow)
						id= sheet.getCellExtend(1, j);		
					else 
						id=sheet.getCellExtend(j,1);
					
					if(id==sname)
					{
						isFind=true;
						break;
					}
				}	
				return isFind;
			}
			
			private function regNum(sValue:String):Boolean
			{
				var isFind:Boolean;
				var iValue:String=sValue.substring(0,1);
				for(var i:int=0;i<9;i+=1)
				{
					if(i.toString()==iValue)
					{
						isFind=true;
						break;
					}
				}
				
				return isFind;
			}
			
			private function createFile(sData:*,sFile:String=null):void
			{
				var  sName:String=String(excel_txt.text);
				var sPath:String=xml_txt.text;
				if(sPath=="" || sPath=="默认和Excel同一路径")  sPath = sName.substring(0,sName.lastIndexOf(File.separator));
				
				sName=sName.substring(sName.lastIndexOf(File.separator)+1,sName.lastIndexOf("."));			   
				
				sPath+=File.separator+(sFile ? sFile+File.separator :"")+sName+".xml";
				
				addTipsValue("start create xml file "+sPath);
				saveData(sPath,sData);
			}
			
			/**
			 * 保存文件
			 */
			private function saveData(path:String = null, _dataXML:String = null):void {		
				try
				{
					var dataFile:File = new File(path);		
					var stream:FileStream = new FileStream();		
					stream.open(dataFile, FileMode.WRITE);
					stream.writeUTFBytes("<?xml version='1.0' encoding='UTF-8'?>\n<root>\n"+_dataXML+"</root>");
					stream.close();
					
					Alert.show(path,"生成XML文件成功");
					addTipsValue("create xml file complete");
				}catch(e:Error)
				{
					Alert.show(path,"路径错误");
				}
			}	
			
			private function addTipsValue(sValue:String):void
			{
				if(tips_txt.text) tips_txt.text+="\n";
				tips_txt.text+=sValue;			
			}	
			
			protected function onBrowseProject(event:MouseEvent):void
			{				
				var excelFilter:FileFilter = new FileFilter("Excel(*.xlsx)", "*.xlsx");
				var file:File = new File();
				file.browseForOpen("选择Excel文件",[excelFilter]);
				file.addEventListener(Event.SELECT,onProjectSelected);
			}
			
			protected function onProjectSelected(event:Event):void
			{
				var file:File = event.target as File;
				excel_txt.text =file.nativePath;		
				storeDataLSO(excel_txt.text,xml_txt.text);
			}
			
			protected function onBrowseRelease(event:MouseEvent):void
			{
				var file:File = new File();
				file.browseForDirectory("选择生成xml路径");
				file.addEventListener(Event.SELECT,onReleaseSelected);
			}
			
			protected function onReleaseSelected(event:Event):void
			{
				xml_txt.text = (event.target as File).nativePath;
				storeDataLSO(excel_txt.text,xml_txt.text);
			}	
			
			protected function start_btn_clickHandler(event:MouseEvent):void
			{
				if(excel_txt.text=="选择Excel文件")
				{
					Alert.show("选择Excel文件");
					return;
				}
				onCreate(excel_txt.text);
			}
			protected function clear_mc_clickHandler(event:MouseEvent):void
			{
				if(tips_txt.text=="")
				{
					Alert.show("已经清理过了");
					return;
				}
				tips_txt.text="";
			}
			
			private function storeDataLSO(m:String=null, p:String=null):void
			{
				var sharedObject:SharedObject = SharedObject.getLocal("excel", "/");
				sharedObject.data["excelM"] = m;
				sharedObject.data["excelP"] = p;
				
				try
				{
					var flushResult:String = sharedObject.flush();
					if (flushResult == SharedObjectFlushStatus.FLUSHED)
					{
						return;
					}
				}
				catch (e:Error)
				{
					Security.showSettings(SecurityPanel.LOCAL_STORAGE);
				}
			}
			
			private function getValue(m:String):String
			{
				var sharedObject:SharedObject = SharedObject.getLocal("excel", "/");				
				return (sharedObject.data.hasOwnProperty(m) ? sharedObject.data[m] : null);
			}
			
		]]>
	</fx:Script>
	<mx:Form x="-2" y="1" width="492" height="475">	
		<s:BorderContainer width="456" height="30" borderVisible="true" dropShadowVisible="false" borderColor="#4C3939" borderAlpha="0.01">
			<s:Label x="-1" y="-1" text="Excel导出XML工具" width="455" height="29" verticalAlign="middle" textAlign="center"/>
			<s:Label x="355" y="-1" text="beta 4.1.1&#xd;03-22 2015" width="99" height="35" verticalAlign="middle" textAlign="right" paddingBottom="0" color="#8A7070"/>
		</s:BorderContainer>	
		<s:BorderContainer width="456" height="399" dropShadowVisible="true" borderAlpha="0.34" borderWeight="0">		
			<s:Button x="319" y="13" label="选择Excel路径" width="117" id="choose_btn" click="onBrowseProject(event)"/>
			<s:TextInput x="8" y="12" width="299" id="excel_txt" borderVisible="true"/>
			<s:TextInput x="8" y="44" width="299" id="xml_txt" borderVisible="true"/>
			<s:Button x="319" y="45" label="生成xml路径" width="119" id="create_btn"  click="onBrowseRelease(event)"/>
			<s:Button x="276" y="83" label="开始生成" id="start_btn" click="start_btn_clickHandler(event)"/>
			<s:TextArea y="112" width="431" height="275" id="tips_txt" paddingBottom="3" paddingTop="3" x="10"/>
			<s:Button x="357" y="83" label="清理文本" id="clear_mc" click="clear_mc_clickHandler(event)"/>
		</s:BorderContainer>
		
	</mx:Form>
</s:WindowedApplication>
